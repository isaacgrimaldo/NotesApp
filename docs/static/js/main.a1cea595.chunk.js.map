{"version":3,"sources":["firebase/firebaseCongif.js","Helpers/loadNotes.js","Helpers/uploadFile.js","Types/types.js","actions/Note.js","Hooks/useForm.js","Components/Note/BarNote.js","Components/Note/notePhg.js","actions/valid.js","actions/Auth.js","Components/Journal/JournalEntri.js","Components/Journal/JournalEntris.js","Components/Journal/Sidebar.js","Components/Journal/NotingSelecter.js","Components/Journal/Journal.js","Components/Auth/LoginPhg.js","Components/Auth/RegisterPhg.js","Routers/AuthRouter.js","Components/PghLoad.js","Routers/RouterPublics.js","Routers/RoutersPrivate.js","Routers/AppRouters.js","Reducers/NoteReducer.js","Reducers/ValidReducer.js","Store/Store.js","Reducers/ReducerAuth.js","AppHomeWorks.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","id","a","collection","get","getNotes","note","forEach","GetNotasArray","push","data","verificacionSave","noteId","userId","verific","doc","req","Data","body","title","loadNewFiles","file","fromData","FormData","append","fetch","method","resp","ok","json","cloudResp","secure_url","types","newNote","dispatch","getState","Auth","NewNote","date","Date","getTime","add","then","res","Swal","fire","activeNote","showNewNote","setNotes","type","payload","arrayGetNote","notes","updateNote","beforeSaveData","ShowListAct","useFomrValues","values","useState","formsValues","setValues","handlerChangen","target","name","value","Reset","newState","BarNote","useDispatch","useSelector","state","Notes","active","lostData","className","style","display","onChange","e","trueFiles","files","text","allowEnterKey","onBeforeOpen","showLoading","cloutlynUrl","url","close","onClick","idNote","delete","x","disabled","document","getElementById","click","noteToFirestore","update","saveNote","NotePhg","setValuesForm","useRef","useEffect","current","onSubmit","preventDefault","placeholder","autoComplete","src","alt","RemoveError","SetError","msgError","loginWhitEmail_Password","email","password","signInWithEmailAndPassword","user","uid","displayName","catch","message","userName","notesReset","JournalEntri","CurrentNote","handlerShowNote","Verificacion","console","log","backgroundSize","backgroundImage","moment","format","JournalEntris","map","Sidebar","signOut","NotingSelecter","Journal","LoginPhg","Valid","usuarioExist","load","handelerSetValues","ValidForm","validator","isEmail","signInWithPopup","to","RegisterPhg","password2","isFormValid","trim","length","username","createUserWithEmailAndPassword","updateProfile","startRegisterWith_NA_EM_PAS","AuthRouter","path","component","PghLoad","RouterPublics","Component","rest","props","RouterPrivates","AppRouters","cheking","setcheking","logged","setlogged","onAuthStateChanged","exact","inicialState","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","AppHomeWorks","ReactDOM","render"],"mappings":"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","file":"static/js/main.a1cea595.chunk.js","sourcesContent":["import  firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport  'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCyhrSxhAXteMuo2qhrsi49-0DENfOuFgw\",\r\n    authDomain: \"fir-react-37382.firebaseapp.com\",\r\n    databaseURL: \"https://fir-react-37382-default-rtdb.firebaseio.com\",\r\n    projectId: \"fir-react-37382\",\r\n    storageBucket: \"fir-react-37382.appspot.com\",\r\n    messagingSenderId: \"1085112619360\",\r\n    appId: \"1:1085112619360:web:817208f1d4228c02c84e05\",\r\n    measurementId: \"G-GB441M2R9W\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n //para grabar informacion \r\n const db = firebase.firestore();\r\n //para la untentificacion con googel\r\n const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n //para usarlos en la app\r\n export {\r\n     db,\r\n     googleAuthProvider,\r\n     firebase,\r\n }\r\n\r\n\r\n","import { db } from \"../firebase/firebaseCongif\"\r\n\r\n\r\nexport const  loadNotes = async(id) =>{\r\n       \r\n    //se hace una peticion a firebase par optener la infromacion con el id del usuario y la apuntacion a la coleccion de la base de datos\r\n   const getNotes  = await  db.collection(`${id}/jourlnal/notes`).get();\r\n   const note = []; \r\n  \r\n   // se le integran los valores al array\r\n        getNotes.forEach(GetNotasArray => {\r\n             note.push({\r\n                 id: GetNotasArray.id,\r\n                 ...GetNotasArray.data(),\r\n             })\r\n        })\r\n   return note;\r\n}\r\n\r\n\r\nexport const verificacionSave = async(noteId , userId) =>{\r\n   \r\n     let verific = false;\r\n     const req=   await db.doc(`/${userId}/jourlnal/notes/${noteId}`).get()\r\n     const Data =  req.data();\r\n\r\n\r\n     if( !Data.body && !Data.title){\r\n           verific = false;\r\n     }else{\r\n           verific = true;\r\n     }\r\n\r\n     return verific;\r\n\r\n}","\r\nexport const loadNewFiles = async (file) => {\r\n    const Coultrlyn = 'https://api.cloudinary.com/v1_1/apimedia/image/upload';\r\n\r\n    // se crea un body para la peticion\r\n     const fromData = new FormData( );\r\n     fromData.append('upload_preset', 'react-app-homewors');\r\n     fromData.append('file', file );\r\n     \r\n     try {\r\n         //ASI SE HACEN LOS POST FECT\r\n        const resp = await fetch(Coultrlyn , {\r\n            method:'POST',\r\n            body:fromData,\r\n        });\r\n\r\n        if(resp.ok){\r\n            const  cloudResp = await resp.json();\r\n            return  cloudResp.secure_url;\r\n         }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n     } catch (error) {\r\n         throw error;\r\n     }\r\n}\r\n\r\n\r\n","export const types = {\r\n\r\n    login:'[Auth] logged',\r\n    logout:'[Auth] logout',\r\n    \r\n    //reduce valid\r\n    setError:'[Valid] Error',\r\n    setRemoveError:'[Valid] logged',\r\n    UserInexisten:'[Valid  fondNoUser]',\r\n    uiStartLoading :'[valid] loadding',\r\n    uiFinishLoading :'[valid] finish',\r\n\r\n    //reducer Notes\r\n    selectNote:'[Note] NoteSelect',\r\n    activeNote:'[Note] NoteActive',\r\n    createNewNote:'[Note] NewNote',\r\n    setAllNotes:'[Note] setAllNotes',\r\n    updateNote : '[Note]  UpdateNote',\r\n    ErrorSavedata : '[Note]  ErrorSaveData',\r\n    deletNote: '[Note] deletNote',\r\n    resetNotes: '[Note] ResetNotes',\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebaseCongif\";\r\nimport { loadNotes } from \"../Helpers/loadNotes\";\r\nimport { loadNewFiles } from \"../Helpers/uploadFile\";\r\nimport { types } from \"../Types/types\";\r\n\r\nexport const newNote = () => {\r\n      \r\n    //cuando se le llama al dispatch este tiene 2 argumentos que envia  1. el dispach , 2. El store \r\n     return async (dispatch , getState) =>{\r\n            \r\n         const {id} = getState().Auth\r\n         \r\n         const NewNote = {\r\n             title:'',\r\n             body:'',\r\n             date: new Date().getTime(),\r\n         };\r\n\r\n            await  db.collection(`${id}/jourlnal/notes`).add(NewNote)\r\n                .then( async(res) => {\r\n                    Swal.fire('Nueva nota', 'se creo una nueva nota', 'info')  \r\n                    dispatch(activeNote(res.id, NewNote ))\r\n                    const showNewNote = await loadNotes(id);\r\n                    dispatch( setNotes(showNewNote));\r\n                } )\r\n     } \r\n};\r\n\r\nexport const activeNote = ( id , note) => ({\r\n    \r\n    type:types.activeNote,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\n//optencion de nota de fire base\r\nexport const arrayGetNote = (id) => {\r\n    return async (dispatch) => {\r\n       \r\n        const notes =  await loadNotes(id);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\n\r\n\r\n// Control de muestra de notas en el state\r\nexport const setNotes = (notes) => {\r\n    return {\r\n      type:types.setAllNotes,\r\n      payload: notes,\r\n    } \r\n};\r\n\r\n\r\n//guarda las los cambio de las notas \r\nexport const saveNote = (note) => {\r\n    return async (dispatch , getState ) => {\r\n        \r\n    if(!note.url) {\r\n        delete note.url\r\n    }\r\n        const { id } = getState().Auth\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n                                                  //actulizar componentes\r\n        await db.doc(`${id}/jourlnal/notes/${note.id}`).update(noteToFirestore)\r\n        \r\n        Swal.fire('Guardado','Se guradaron correctamnete los datos', 'success');\r\n        dispatch( updateNote( note.id , note));\r\n    }\r\n}\r\n\r\nexport const updateNote = (id ,  note) => {\r\n    return {\r\n        type:types.updateNote,\r\n        payload:{\r\n           id, \r\n            note:{\r\n                ...note,\r\n                id,\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n//no se crea una nueva tarea si la pasada esta sin guardar \r\nexport const beforeSaveData = () => {\r\n    return{\r\n        type:types.ErrorSavedata,\r\n        payload: true,\r\n    }\r\n}\r\n\r\n\r\n//vuelve a habilitar el boton de crear una nueva nota \r\nexport const afertSaveData = () => {\r\n    return{\r\n        type:types.ErrorSavedata,\r\n        payload: false,\r\n    }\r\n}\r\n\r\nexport const UploadNewPiture = (file) =>{\r\n   return async (dispatch  ,  getState) =>{\r\n         \r\n      const {active:note} = getState().Notes;\r\n      \r\n\r\n      Swal.fire({\r\n           title:'Subiendo...',\r\n           text:'subiendo la imagen',\r\n           allowEnterKey: false,\r\n           onBeforeOpen: () =>{\r\n               Swal.showLoading();\r\n           }\r\n       });\r\n\r\n      const cloutlynUrl = await loadNewFiles(file);\r\n      note.url = cloutlynUrl;  \r\n      dispatch(activeNote(note.id , note));\r\n\r\n      Swal.close();\r\n\r\n   }\r\n}\r\n\r\n\r\n//borrar notas \r\nexport const deletNote = (idNote) => {\r\n    return  async (dispatch , getState) => {\r\n\r\n        const { id } = getState().Auth;\r\n\r\n       await db.doc(`${id}/jourlnal/notes/${idNote}`).delete()\r\n              .then( x => {\r\n                  Swal.fire('Nota borrara', 'Sea Borrado la nota','success')\r\n              })\r\n           \r\n        dispatch(ShowListAct(idNote));\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nexport const ShowListAct = (id) => {\r\n   return {\r\n       type: types.deletNote,\r\n       payload: id,\r\n   }\r\n} ","import { useState } from \"react\"\r\n\r\n\r\nexport const useFomrValues = (values = {}) => {\r\n  \r\n       const [formsValues, setValues] = useState(values);\r\n\r\n        \r\n    const  handlerChangen =({target}) => {\r\n        setValues({\r\n             ...formsValues,\r\n             [target.name]:target.value, // = [name]: value;\r\n        });\r\n  };\r\n\r\n  const Reset = (newState = values) => {\r\n      setValues(newState);\r\n  };\r\n\r\n\r\n      \r\n  return [formsValues , handlerChangen , Reset];\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2';\r\nimport { afertSaveData, deletNote, saveNote, UploadNewPiture } from '../../actions/Note'\r\n\r\nexport const BarNote = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active:note ,  lostData} = useSelector(state => state.Notes)\r\n\r\n      \r\n    const handleSaveNote = () =>{\r\n      if( note.body || note.title ){\r\n        dispatch (saveNote(note))\r\n        dispatch(afertSaveData()); \r\n       }else{\r\n         Swal.fire('Erro de envio de datos','Debe llenar correctamnete los campos','warning')\r\n       }   \r\n       \r\n    }\r\n\r\n    const startNewFile = ()  => {\r\n         document.getElementById('selectFile').click()\r\n   \r\n        }\r\n   \r\n    const SelcectFile = (e) => {\r\n       const trueFiles = e.target.files[0] //para acder a los datos envidos\r\n       \r\n       if(trueFiles){\r\n         dispatch( UploadNewPiture(trueFiles));\r\n       }\r\n    }   \r\n   \r\n   const deleteNote = () => {\r\n      dispatch(deletNote(note.id))\r\n   }\r\n\r\n    return (\r\n        <div className ='Note__Appbar animate__animated animate__fadeInDown'>\r\n             <span>28 de Agosto del 2021</span>\r\n             <input \r\n               id ='selectFile'\r\n               type ='file'\r\n               style ={{display:'none'}}\r\n               onChange ={SelcectFile}\r\n             />\r\n            <div>\r\n                <button\r\n                className ='btn  btn__danger'\r\n                onClick = {deleteNote}\r\n                disabled ={lostData}\r\n                 >\r\n                 Borrar\r\n                </button>\r\n                <button\r\n                  className='btn '\r\n                  onClick ={startNewFile}\r\n                >\r\n                 Imagen\r\n                </button>\r\n                <button\r\n                   className='btn'\r\n                   onClick = {handleSaveNote}\r\n                >\r\n                  Guardar \r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote } from '../../actions/Note';\r\nimport { useFomrValues } from '../../Hooks/useForm';\r\nimport { BarNote } from './BarNote'\r\n\r\nexport default function NotePhg() {\r\n   \r\n    const {active:note} = useSelector(state => state.Notes);\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const [values,  setValuesForm , Reset ] = useFomrValues(note);\r\n     \r\n   const {title , body , url} = values ;\r\n\r\n   const noteId = useRef(note.id)\r\n\r\n\r\n    useEffect(() => {\r\n       //para cambiar el valor de la nota \r\n       if(note.id !== noteId.current){\r\n         Reset( note);\r\n         noteId.current = note.id\r\n       }\r\n\r\n    }, [note , Reset])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n       //para actializar los valores en el active\r\n      dispatch(activeNote(values.id , values))\r\n   \r\n\r\n    }, [values ,  dispatch])\r\n\r\n    const ResetForm = (e) => {\r\n       e.preventDefault()\r\n    }\r\n    return (\r\n        <div className = 'Note__bar-content'>\r\n            <BarNote/>\r\n           <div className='note__content animate__animated animate__fadeInUp'>\r\n             <form className ='note__content  animate__animated animate__fadeInUp ' onSubmit={ResetForm}>\r\n                <input\r\n                \r\n                  type='text'\r\n                  placeholder ='¿ Que Tarea es ?'\r\n                  className='note__title-input'\r\n                  name ='title'\r\n                  value = {title} \r\n                  onChange = {setValuesForm}\r\n                />\r\n                <textarea\r\n                   placeholder='¿ Que tienes que hacer ?'\r\n                   autoComplete = 'off'\r\n                   className='note__texrareas'\r\n                   name ='body'\r\n                  value = {body} \r\n                  onChange = {setValuesForm}\r\n                >\r\n                </textarea>\r\n                <div className='note__img'>\r\n                    {\r\n                       url &&\r\n                       (\r\n                        <img\r\n                        src = {url}\r\n                        alt ='una imagen'\r\n                      />\r\n                       )  \r\n                    } \r\n                </div> \r\n             </form>           \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../Types/types\"\r\n\r\n\r\nexport const RemoveError = () => {\r\n   return {\r\n       type: types.setRemoveError\r\n   }\r\n}\r\n\r\n\r\nexport const SetError = (msgError) => {\r\n    return {\r\n        type: types.setError,\r\n        payload: msgError, \r\n    }  \r\n} \r\n\r\nexport const ValidUserExisten = () =>{\r\n    return{\r\n        type:types.UserInexisten,\r\n        payload:'Email o Password incorrecto ',\r\n    }\r\n}\r\n\r\nexport const startLoadding = () => {\r\n    return{\r\n        type :types.uiStartLoading,\r\n    } \r\n}\r\n\r\nexport const finishLoadding = () => {\r\n    return{\r\n        type: types.uiFinishLoading,\r\n    }\r\n}","import { types } from \"../Types/types\";\r\n\r\n\r\n//para libreria de mensaje de error\r\nimport Swal  from 'sweetalert2'\r\n\r\n//para importar las configuracion de las base de datos\r\nimport {firebase, googleAuthProvider} from '../firebase/firebaseCongif'\r\nimport { finishLoadding, startLoadding } from \"./valid\";\r\n\r\n\r\n//ejemplo de funcion asyncona que gracias la Middleware de thuk podemos relizar \r\nexport const PAsync = (id , user) => {\r\n    return (dispatch) =>  {\r\n        setTimeout(() => {\r\n            \r\n             dispatch(Auth(id , user))\r\n        }, 3500);\r\n    }\r\n}\r\n\r\n//auht por email ,  name  , password\r\nexport const startRegisterWith_NA_EM_PAS = ( username , email , password ) => {\r\n     return (dispatch) =>{\r\n               \r\n        //para crear un nuevo usuario con los datos mandandados\r\n        firebase.auth().createUserWithEmailAndPassword(email , password)\r\n        .then( async ({user}) => {\r\n              \r\n            //cambia los datos del usuacrio antes de registrarlo\r\n            await user.updateProfile({\r\n                displayName: username\r\n            });\r\n              \r\n             dispatch(Auth(user.uid , user.displayName))\r\n        } )\r\n        .catch((e) => {\r\n            Swal.fire('Error' , e.message , 'error')\r\n        })\r\n     }\r\n}\r\n\r\n\r\n\r\n//auth de google\r\nexport const startGoolgeLogin = () => {\r\n   \r\n    ///esta es la conguracion basica de las autentificacion  \r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider) // return una promise\r\n        .then(({user}) => {\r\n            dispatch(Auth(user.uid, user.email ))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//login email password\r\n\r\nexport  const loginWhitEmail_Password = (email ,  password) => {\r\n    return (dispatch) =>{\r\n         dispatch(startLoadding()); \r\n        //para buscar un usuario con el email y la password\r\n         firebase.auth().signInWithEmailAndPassword(email , password)\r\n         .then( ({user}) => {\r\n              dispatch(finishLoadding())\r\n              dispatch(Auth(user.uid , user.displayName));\r\n              \r\n         })\r\n         .catch( (e) => {\r\n               Swal.fire('Error',e.message , 'error')\r\n         });\r\n    }\r\n}; \r\n\r\n\r\n\r\nexport const Auth = (id , userName ) => {\r\n    return{\r\n        type: types.login,\r\n        payload:{\r\n            id,\r\n            userName,\r\n        }\r\n    }\r\n};\r\n\r\nexport const Loggout = () => {\r\n    return {\r\n        type:types.logout\r\n    }\r\n};\r\n\r\nexport const LoggoutSession = () => {\r\n    \r\n    return async(dispatch) => {\r\n\r\n        //metodo para que el usuario salga de la  session         \r\n       await firebase.auth().signOut()\r\n            .then( x => {\r\n                dispatch(notesReset());\r\n                dispatch(Loggout()); \r\n            })\r\n    }\r\n}; \r\n\r\n\r\n//estado de las notas incial\r\nexport const  notesReset = () =>{ \r\n   return{\r\n       type: types.resetNotes,\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* Actions\r\n *  \r\n * en esta carpeta se pordra estalecer que va a realizar casa dispach que mandemos\r\n * \r\n */","import React from 'react';\r\n\r\n//para usar moment en cualquier idioma \r\nimport moment from 'moment';\r\nimport 'moment/locale/es-mx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote } from '../../actions/Note';\r\nimport Swal from 'sweetalert2';\r\nimport { verificacionSave } from '../../Helpers/loadNotes';\r\n\r\nexport const JournalEntri = ({id , title , body ,  date , url}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {active:CurrentNote} = useSelector(state => state.Notes)\r\n    const {id:userId} = useSelector(state => state.Auth)\r\n\r\n    \r\n    const handlerShowNote = async (e) => {\r\n       \r\n        if(CurrentNote?.body || CurrentNote?.title){    \r\n             \r\n            const Verificacion =  await verificacionSave(CurrentNote.id , userId )\r\n                 \r\n             if(Verificacion){\r\n                dispatch(activeNote( id , {\r\n                    date, title , body,  url\r\n                }));\r\n\r\n             }else{\r\n                console.log(Verificacion);\r\n                Swal.fire('Erro al guardar los datos','Los datos deben ser guardados','warning')  \r\n             }\r\n\r\n        }else if(!CurrentNote){\r\n           dispatch(activeNote( id , {\r\n                date, title , body,  url\r\n            }));  \r\n        }else if(CurrentNote){\r\n            Swal.fire('Accion no restringida','debe llenar por lo menos 1 espacio','warning')\r\n        }\r\n   }\r\n\r\n   //react-app-homewors\r\n    return (\r\n        \r\n        <>\r\n          <div className='journal__entri pointer'\r\n            onClick = {handlerShowNote}\r\n          >\r\n              {\r\n                  url &&\r\n               <div className='journal__entri-picture' \r\n               style={{\r\n                   backgroundSize : 'cover',\r\n                   backgroundImage : `url( ${url})`  \r\n                 }}\r\n           >\r\n           </div>     \r\n              }\r\n                 \r\n              <div className ='journal__entry-body'>\r\n                    <p className=\"joural__entry-title\">\r\n                       {title}\r\n                       {moment().format('h:mm')}\r\n                   </p>\r\n              </div>\r\n              <div className='journal__entry-date-box'>\r\n                      <p className = 'journal__entry-date-day'> {moment().format('dddd')}</p>\r\n                      <p className  ='journal__entry-date-mont-numday'> {moment().format('MMMM D')}</p>\r\n              </div>\r\n         </div>  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntri } from './JournalEntri';\r\n\r\nexport const JournalEntris = () => {\r\n      \r\n     const { notes } = useSelector( state => state.Notes) \r\n\r\n     return (\r\n        <div className='joutnal__Entris animate__animated animate__fadeInLeft'> \r\n            \r\n            {\r\n                notes.map( notes =>(\r\n                    (notes.body  || notes.title)\r\n                    ? (<JournalEntri key ={notes.id} {...notes}  />)\r\n                    :''\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { LoggoutSession } from '../../actions/Auth'\r\nimport { beforeSaveData, newNote } from '../../actions/Note'\r\nimport { JournalEntris } from './JournalEntris'\r\n\r\nexport const Sidebar = () => {\r\n    \r\n    const  { name  } = useSelector(state => state.Auth)\r\n    const  {  active  } = useSelector(state => state.Notes)\r\n    const  { lostData  } = useSelector(state => state.Notes)\r\n    const   dispatch = useDispatch()\r\n    \r\n\r\n    const handlerLggout = (e) => {\r\n         e.preventDefault();        \r\n         dispatch(LoggoutSession());\r\n    } \r\n\r\n    const handlerNewNote = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if(active?.body || active?.title){     \r\n            dispatch(beforeSaveData());\r\n           dispatch(newNote());\r\n        }else if(!active){\r\n            dispatch(beforeSaveData());\r\n            dispatch(newNote());\r\n        }else if(active){\r\n            Swal.fire('Accion  restringida','Debe borrar o guardar la nota actual','error')\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n       <aside className = 'journal__sidebar animate__animated animate__fadeInLeft'>\r\n           <div className ='journal__sidebar-navbar'>\r\n               <h3 className ='mt-5'>\r\n               <i className=\"fas fa-address-book\"></i>\r\n                   <span> {(name === null ) ?'sin user' : name}</span>\r\n               </h3>\r\n               <button\r\n                className='btn mt-1'\r\n                onClick = {handlerLggout}\r\n               >\r\n                 logout\r\n               </button>\r\n               <div className='journla__new-entry'>\r\n               <button\r\n                 className =\"btn\"\r\n                 disabled ={lostData}\r\n                 onClick ={handlerNewNote}\r\n                >\r\n               <i className=\"far fa-calendar-plus fa-5x \"\r\n               \r\n                  \r\n               ></i>\r\n                <p className='mt-1'>Nueva Nota</p>\r\n               </button>\r\n               </div>\r\n           </div>\r\n           <JournalEntris/>\r\n       </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NotingSelecter = () => {\r\n    return (\r\n        <div className ='noting__main-content animate__animated animate__fadeInDown'>\r\n            <p className='noting__body'>\r\n                Select Someting\r\n                <br/>\r\n                 seleccione algo\r\n            </p>\r\n            <i className=\"far fa-clipboard fa-5x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport NotePhg from '../Note/notePhg'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NotingSelecter } from './NotingSelecter'\r\n\r\n\r\nexport const Journal = () => {\r\n   \r\n     const {active} = useSelector(state => state.Notes)\r\n\r\n    return (\r\n        <>\r\n           <div className ='journal__main-content'>\r\n                 <Sidebar/>\r\n                 <main>\r\n                     {\r\n                            (active === null)\r\n                                    ?(<NotingSelecter/>)\r\n                                    : (<NotePhg/>)\r\n                     }    \r\n                 </main>\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\n\r\n\r\nimport {startGoolgeLogin , loginWhitEmail_Password} from '../../actions/Auth'\r\nimport { useFomrValues } from '../../Hooks/useForm'\r\nimport {useDispatch , useSelector} from 'react-redux'\r\nimport { RemoveError, SetError } from '../../actions/valid'\r\n\r\n\r\nexport const LoginPhg = () => {\r\n         \r\n    const {msgError , usuarioExist , load} = useSelector(state => state.Valid); \r\n\r\n     //asi se puede acceder a las funciones de cada reducer que usamos (con el types)\r\n     const dispatch = useDispatch()\r\n\r\n     const [values , handelerSetValues, ]  = useFomrValues({\r\n         email: '',\r\n         password : '',\r\n     })\r\n\r\n\r\n    const {email, password } = values\r\n\r\n    const HandlerOnSubmit = (e) => {\r\n        e.preventDefault()\r\n    \r\n        if( ValidForm() ){\r\n            dispatch(loginWhitEmail_Password(email , password))\r\n        }\r\n    }\r\n\r\n    const handlerGoogleStart = () => {\r\n         dispatch(startGoolgeLogin())                      \r\n    }\r\n\r\n    const ValidForm = () => {\r\n        if(!validator.isEmail(email)){\r\n            dispatch(SetError('Ingrese un email valido'));\r\n            return false;\r\n        }else if(password < 6){\r\n            dispatch(SetError('ingrese una password valida mayor de 6 caracteres'));\r\n            return false;\r\n        }\r\n       \r\n        dispatch(RemoveError())\r\n        return true \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title' >Login</h3>\r\n            {\r\n              (usuarioExist !== null ) &&(\r\n\r\n              <div className ='alert__eroror-from'>\r\n                   {usuarioExist}  \r\n              </div>\r\n              )        \r\n            \r\n\r\n            }\r\n            \r\n            {\r\n              (msgError !== null ) &&(\r\n\r\n              <div className ='alert__eroror-from'>\r\n                   {msgError}  \r\n              </div>\r\n              )        \r\n            \r\n\r\n            }\r\n            \r\n            <hr/>\r\n            <form className ='auth__form animate__animated animate__fadeIn' onSubmit = {HandlerOnSubmit}> \r\n                <input\r\n                className='auth__input'\r\n                   value = {email} \r\n                   onChange ={handelerSetValues}\r\n                   type='text'\r\n                   placeholder ='Correo electrico'\r\n                   name='email'\r\n                   autoComplete= 'off'\r\n                />\r\n\r\n               <input \r\n                   className='auth__input'\r\n                   value = {password} \r\n                   onChange ={handelerSetValues}\r\n                   type='password'\r\n                   placeholder ='Contraseña'\r\n                   name='password'\r\n                   autoComplete= 'off'\r\n                />\r\n                <button\r\n                  type='submit'\r\n                  className ='btn btn-Primary btn__block'\r\n                  disabled ={ load }\r\n                >\r\n                   Entrar   \r\n                </button>\r\n                <hr />\r\n                 <div>\r\n                 <div \r\n                            className=\"google-btn\"\r\n                            onClick = {handlerGoogleStart}\r\n                        >\r\n                            <div className=\"google-icon-wrapper\">\r\n                                <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                            </div>\r\n                            <p className=\"btn-text\">\r\n                                <b>Sign in with google</b>\r\n                            </p>\r\n                        </div>\r\n                 </div>\r\n                  \r\n                 <Link\r\n                   className = 'link'\r\n                   to ='/auth/register'\r\n                 >\r\n                  click si no tines cuenta\r\n                 </Link>\r\n            </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport  validator from 'validator'\r\nimport {useDispatch , useSelector} from 'react-redux'\r\n\r\nimport {useFomrValues} from '../../Hooks/useForm'\r\nimport {SetError ,  RemoveError} from '../../actions/valid'\r\nimport { startRegisterWith_NA_EM_PAS } from '../../actions/Auth'\r\n\r\n\r\nexport const RegisterPhg = () => {\r\n \r\n  //para optener los datos del store\r\n  const {msgError} = useSelector(state => state.Valid)\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n   const [values , setValuesForm] = useFomrValues({\r\n      name: '',\r\n      email:'',\r\n      password: '',\r\n      password2: ''\r\n\r\n   })\r\n\r\n   const {name , email , password , password2} = values;\r\n   \r\n   const handlerOnSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n  \r\n\r\n      if( isFormValid() ){\r\n           dispatch(RemoveError());\r\n           dispatch(startRegisterWith_NA_EM_PAS(name , email , password))\r\n      }\r\n      \r\n   };\r\n\r\n   const isFormValid = () => {\r\n       \r\n       if(name.trim().length === 0 ){\r\n         dispatch(SetError('Error de en el nombre de usuario'));\r\n         return false;\r\n\r\n       }else if(!validator.isEmail(email)){\r\n        dispatch(SetError('Error en el email de usuario'));\r\n        return false;  \r\n\r\n       }else if( password !== password2 || password.length < 6 || password2.length < 6  ){\r\n        dispatch(SetError('Error en el password de usuario'));   \r\n        return false\r\n       }\r\n\r\n\r\n       return true;\r\n   };\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title' >Registro</h3>\r\n            <hr/>\r\n              {\r\n                 msgError != null &&(\r\n                   \r\n                   <div className = \"alert__eroror-from\" >\r\n                        {msgError}\r\n                   </div>\r\n                 )\r\n\r\n              }\r\n             <div className ='animate__animated animate__fadeIn'>       \r\n            <form className ='auth__form ' onSubmit ={handlerOnSubmit}> \r\n                \r\n            <input\r\n                className='auth__input' \r\n                   type='text'\r\n                   placeholder ='Nombre de usuario'\r\n                   name='name'\r\n                   value={name}\r\n                   onChange ={setValuesForm}\r\n                   autoComplete= 'off'\r\n                />\r\n                \r\n                <input\r\n                className='auth__input' \r\n                   type='text'\r\n                   placeholder ='Correo electrico'\r\n                   name='email'\r\n                   value={email}\r\n                   onChange ={setValuesForm}\r\n                   autoComplete= 'off'\r\n                />\r\n\r\n               <input \r\n                   className='auth__input'\r\n                   type='password'\r\n                   placeholder ='Contraseña'\r\n                   name='password'\r\n                   value={password}\r\n                   onChange ={setValuesForm}\r\n                   autoComplete= 'off'\r\n                />\r\n\r\n               <input\r\n                className='auth__input' \r\n                   type='password'\r\n                   placeholder ='Confrime la contraseña'\r\n                   name='password2'\r\n                   value={password2}\r\n                   onChange ={setValuesForm}\r\n                   autoComplete= 'off'\r\n                />\r\n\r\n                <button\r\n                  type='submit'\r\n                  className ='btn btn-Primary btn__block'\r\n                >\r\n                    Resgritrar   \r\n                </button>\r\n                <hr />\r\n                  \r\n                 <Link\r\n                   className = 'link'\r\n                   to ='/auth/login'\r\n                 >\r\n                   ¿Ya estas regristrado?\r\n                 </Link>\r\n            </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginPhg } from '../Components/Auth/LoginPhg'\r\nimport { RegisterPhg } from '../Components/Auth/RegisterPhg'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n       <div className ='auth__main'>\r\n         <div className ='auth__box-container'>\r\n            <Switch>\r\n                <Route path='/auth/login'  component = {LoginPhg} />\r\n                <Route path ='/auth/register' component = {RegisterPhg}/>\r\n                <Redirect  to= '/auth/login'/>\r\n            </Switch>\r\n         </div>   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PghLoad = () => {\r\n    return (\r\n        <div className ='pageLOad'>\r\n             <p className = 'alert__Load'>Cargando.....</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport  PropTypes from 'prop-types';\r\n\r\nexport const RouterPublics = ({\r\n    Auth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n           {...rest}\r\n           component ={(props) => (\r\n               (!Auth)\r\n                 ?(<Component {...props}/>)\r\n                 :(<Redirect to ='/'/>)\r\n           )}\r\n        />    \r\n    )\r\n}\r\n\r\n\r\nRouterPublics.propTypes ={\r\n    Auth: PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired,\r\n}","import React  from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport  PropTypes from 'prop-types';\r\n\r\nexport const RouterPrivates = ({\r\n    Auth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n           {...rest}\r\n           component ={(props) => (\r\n               (Auth)\r\n                 ?(<Component {...props}/>)\r\n                 :(<Redirect to ='/auth/login'/>)\r\n           )}\r\n        />    \r\n    )\r\n}\r\n\r\n\r\nRouterPrivates.propTypes ={\r\n    Auth: PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport {firebase} from '../firebase/firebaseCongif'\r\n\r\n\r\nimport { Journal } from \"../Components/Journal/Journal\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { Auth } from \"../actions/Auth\";\r\nimport { PghLoad } from \"../Components/PghLoad\";\r\nimport { RouterPublics } from \"./RouterPublics\";\r\nimport { RouterPrivates } from \"./RoutersPrivate\";\r\nimport { arrayGetNote} from \"../actions/Note\";\r\n\r\nexport const AppRouters = () => {\r\n\r\n     const [cheking, setcheking] = useState(true)\r\n     const [logged, setlogged] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //para optener lo datos de usuario sin hacer login\r\n    useEffect(() => {\r\n          //esto guarda la ultima autenticacion de una cuenta\r\n          firebase.auth().onAuthStateChanged ( async (user) => {\r\n              //pregunta si hay algo dentro del objeto mandado \r\n              if(user?.uid){\r\n                dispatch(Auth(user.uid , user.displayName))\r\n                setlogged(true);\r\n                // se optienen las notas y se agreegan al store\r\n                 dispatch( arrayGetNote(user.uid));\r\n               }else{\r\n                   setlogged(false)\r\n               }\r\n               //para verificar si se autentico el usuario\r\n               setcheking(false);\r\n          });\r\n        \r\n    }, [dispatch])\r\n\r\n\r\n//muestra la pagina de carga\r\n   if(cheking){\r\n        return <PghLoad/>\r\n   }\r\n\r\n    return(\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                     {\r\n                         (logged)\r\n                          ?<RouterPrivates Auth={logged} component={Journal}  exact  path ='/' />\r\n                          : <RouterPublics  Auth ={logged} component ={AuthRouter}     />\r\n                     }\r\n                    \r\n                     <Redirect to='/'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","//controla todo lo que tiene que ver con las notas\r\nimport { types } from \"../Types/types\";\r\n\r\nconst inicialState = {\r\n    notes:[],\r\n    active:null,\r\n    lostData: false,\r\n};\r\n\r\n\r\nexport const NoteReducer = (state =inicialState , action) => {\r\n        switch (action.type) {\r\n                \r\n            case types.activeNote :\r\n                return{\r\n                    ...state,\r\n                    active:{\r\n                        ...action.payload\r\n                    }\r\n                };\r\n          \r\n            case types.setAllNotes:\r\n                return{\r\n                    ...state,\r\n                    notes:[\r\n                        ...action.payload\r\n                    ]\r\n                };\r\n            \r\n            case types.updateNote:\r\n                return{\r\n                    ...state,\r\n                    notes: state.notes.map( \r\n                        note => note.id === action.payload.id\r\n                            ?action.payload.note\r\n                            : note \r\n                        )\r\n                };\r\n\r\n            case types.ErrorSavedata:\r\n                    return{\r\n                         ...state,\r\n                         lostData:action.payload\r\n                    }        \r\n\r\n\r\n            case types.deletNote:\r\n                 return{\r\n                     ...state,\r\n                     active: null,\r\n                     notes: state.notes.filter(note => note.id !== action.payload)\r\n                 }        \r\n\r\n            case types.resetNotes:     \r\n            return  inicialState;     \r\n\r\n            default:\r\n                 return state;\r\n        }      \r\n};","import { types } from \"../Types/types\";\r\n\r\n\r\nconst initialState = {\r\n    load : false,\r\n    msgError :null,\r\n    usuarioExist: null,\r\n}\r\n\r\nexport  const ValidReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  types.setError:\r\n              return {\r\n                  ...state,\r\n                  msgError: action.payload,\r\n              }\r\n        case types.setRemoveError:\r\n             return{\r\n                 ...state,\r\n                 msgError: null,\r\n                 usuarioExist:null,\r\n             }    \r\n\r\n        case types.UserInexisten:\r\n              return{\r\n                 ...state,\r\n                 usuarioExist:action.payload, \r\n              }     \r\n\r\n        case types.uiStartLoading: \r\n            return{\r\n                ...state,\r\n                load:true,\r\n            };\r\n\r\n         case types.uiFinishLoading:\r\n             return{\r\n                 ...state,\r\n                 load:false,\r\n             };   \r\n\r\n              \r\n        default:\r\n             return state;\r\n    }\r\n}\r\n","import {createStore , combineReducers ,  applyMiddleware , compose} from 'redux'\r\n\r\n//libreria del widdleware para trabajar con funciones asyn\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { NoteReducer } from '../Reducers/NoteReducer';\r\nimport {ReducerAuth} from '../Reducers/ReducerAuth'\r\nimport {ValidReducer} from '../Reducers/ValidReducer'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; // congiguracion preterminda\r\n\r\n\r\n//asi se le pasan todos lo reducers que vamos a utilizar \r\nexport const Reducers = combineReducers({\r\n    Auth: ReducerAuth,\r\n    Valid: ValidReducer,\r\n    Notes: NoteReducer,\r\n})\r\n\r\n\r\n//asi se  crea la store que es de donde vamos a optener todos los datos y va contener todos lod reducers\r\nexport const store = createStore(\r\n      Reducers,\r\n    //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), //para poder ver redux en el navegador\r\n    composeEnhancers(\r\n        applyMiddleware(thunk) // esta configuracion es para trabjar con funciones asincronas\r\n    ) \r\n    \r\n    );","import { types } from \"../Types/types\";\r\n\r\nexport const ReducerAuth = (state ={ } , action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n                   return {\r\n                       id: action.payload.id,\r\n                       name: action.payload.userName,\r\n                   };\r\n                    \r\n        case types.logout:\r\n                  return { };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n// esto nos ayudadra pasar toda infromacion a que necitemos para que la app funciones a todos los componentes que la vaya a consumir \r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nimport { AppRouters } from './Routers/AppRouters'\r\nimport { store } from './Store/Store'\r\n\r\nexport const AppHomeWorks = () => {\r\n    return (\r\n         <Provider store = {store}>\r\n             <AppRouters/>\r\n         </Provider>           \r\n    )\r\n}\r\n","import React from 'react' ;\r\nimport ReactDOM  from 'react-dom';\r\n\r\nimport './styles/index.scss'\r\n\r\nimport { AppHomeWorks } from './AppHomeWorks';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <AppHomeWorks/>\r\n    ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}